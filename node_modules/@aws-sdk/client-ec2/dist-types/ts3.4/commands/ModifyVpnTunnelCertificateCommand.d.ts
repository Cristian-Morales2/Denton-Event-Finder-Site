import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  ModifyVpnTunnelCertificateRequest,
  ModifyVpnTunnelCertificateResult,
} from "../models/models_6";
export { __MetadataBearer, $Command };
export interface ModifyVpnTunnelCertificateCommandInput
  extends ModifyVpnTunnelCertificateRequest {}
export interface ModifyVpnTunnelCertificateCommandOutput
  extends ModifyVpnTunnelCertificateResult,
    __MetadataBearer {}
export declare class ModifyVpnTunnelCertificateCommand extends $Command<
  ModifyVpnTunnelCertificateCommandInput,
  ModifyVpnTunnelCertificateCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: ModifyVpnTunnelCertificateCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ModifyVpnTunnelCertificateCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ModifyVpnTunnelCertificateCommandInput,
    ModifyVpnTunnelCertificateCommandOutput
  >;
  private serialize;
  private deserialize;
}
