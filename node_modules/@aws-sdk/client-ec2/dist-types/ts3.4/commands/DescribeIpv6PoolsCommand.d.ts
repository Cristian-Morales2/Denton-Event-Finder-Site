import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  DescribeIpv6PoolsRequest,
  DescribeIpv6PoolsResult,
} from "../models/models_4";
export { __MetadataBearer, $Command };
export interface DescribeIpv6PoolsCommandInput
  extends DescribeIpv6PoolsRequest {}
export interface DescribeIpv6PoolsCommandOutput
  extends DescribeIpv6PoolsResult,
    __MetadataBearer {}
export declare class DescribeIpv6PoolsCommand extends $Command<
  DescribeIpv6PoolsCommandInput,
  DescribeIpv6PoolsCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: DescribeIpv6PoolsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeIpv6PoolsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeIpv6PoolsCommandInput, DescribeIpv6PoolsCommandOutput>;
  private serialize;
  private deserialize;
}
