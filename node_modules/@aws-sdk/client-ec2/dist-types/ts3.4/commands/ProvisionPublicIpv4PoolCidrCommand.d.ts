import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@aws-sdk/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  ProvisionPublicIpv4PoolCidrRequest,
  ProvisionPublicIpv4PoolCidrResult,
} from "../models/models_6";
export { __MetadataBearer, $Command };
export interface ProvisionPublicIpv4PoolCidrCommandInput
  extends ProvisionPublicIpv4PoolCidrRequest {}
export interface ProvisionPublicIpv4PoolCidrCommandOutput
  extends ProvisionPublicIpv4PoolCidrResult,
    __MetadataBearer {}
export declare class ProvisionPublicIpv4PoolCidrCommand extends $Command<
  ProvisionPublicIpv4PoolCidrCommandInput,
  ProvisionPublicIpv4PoolCidrCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: ProvisionPublicIpv4PoolCidrCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ProvisionPublicIpv4PoolCidrCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ProvisionPublicIpv4PoolCidrCommandInput,
    ProvisionPublicIpv4PoolCidrCommandOutput
  >;
  private serialize;
  private deserialize;
}
