import { generateStatements } from '@aws-amplify/graphql-generator';
/**
 * Generates GraphQL documents for a given AppSync API
 */
export class AppSyncGraphqlDocumentGenerator {
    fetchSchema;
    resultBuilder;
    /**
     * Configures the AppSyncGraphqlDocumentGenerator
     */
    constructor(fetchSchema, resultBuilder) {
        this.fetchSchema = fetchSchema;
        this.resultBuilder = resultBuilder;
    }
    generateModels = async ({ targetFormat, maxDepth, typenameIntrospection, relativeTypesPath, }) => {
        const schema = await this.fetchSchema();
        if (!schema) {
            throw new Error('Invalid schema');
        }
        const generatedStatements = generateStatements({
            schema,
            target: targetFormat,
            maxDepth,
            typenameIntrospection,
            relativeTypesPath,
        });
        return this.resultBuilder(generatedStatements);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhxbF9kb2N1bWVudF9nZW5lcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ3JhcGhxbF9kb2N1bWVudF9nZW5lcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFPcEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sK0JBQStCO0lBT2hDO0lBQ0E7SUFMVjs7T0FFRztJQUNILFlBQ1UsV0FBa0MsRUFDbEMsYUFBb0U7UUFEcEUsZ0JBQVcsR0FBWCxXQUFXLENBQXVCO1FBQ2xDLGtCQUFhLEdBQWIsYUFBYSxDQUF1RDtJQUMzRSxDQUFDO0lBQ0osY0FBYyxHQUFHLEtBQUssRUFBRSxFQUN0QixZQUFZLEVBQ1osUUFBUSxFQUNSLHFCQUFxQixFQUNyQixpQkFBaUIsR0FDWSxFQUFFLEVBQUU7UUFDakMsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFeEMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztTQUNuQztRQUVELE1BQU0sbUJBQW1CLEdBQUcsa0JBQWtCLENBQUM7WUFDN0MsTUFBTTtZQUNOLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLFFBQVE7WUFDUixxQkFBcUI7WUFDckIsaUJBQWlCO1NBQ2xCLENBQUMsQ0FBQztRQUVILE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2pELENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2VuZXJhdGVTdGF0ZW1lbnRzIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2dyYXBocWwtZ2VuZXJhdG9yJztcbmltcG9ydCB7XG4gIERvY3VtZW50R2VuZXJhdGlvblBhcmFtZXRlcnMsXG4gIEdlbmVyYXRpb25SZXN1bHQsXG4gIEdyYXBocWxEb2N1bWVudEdlbmVyYXRvcixcbn0gZnJvbSAnLi9tb2RlbF9nZW5lcmF0b3IuanMnO1xuXG4vKipcbiAqIEdlbmVyYXRlcyBHcmFwaFFMIGRvY3VtZW50cyBmb3IgYSBnaXZlbiBBcHBTeW5jIEFQSVxuICovXG5leHBvcnQgY2xhc3MgQXBwU3luY0dyYXBocWxEb2N1bWVudEdlbmVyYXRvclxuICBpbXBsZW1lbnRzIEdyYXBocWxEb2N1bWVudEdlbmVyYXRvclxue1xuICAvKipcbiAgICogQ29uZmlndXJlcyB0aGUgQXBwU3luY0dyYXBocWxEb2N1bWVudEdlbmVyYXRvclxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBmZXRjaFNjaGVtYTogKCkgPT4gUHJvbWlzZTxzdHJpbmc+LFxuICAgIHByaXZhdGUgcmVzdWx0QnVpbGRlcjogKGZpbGVNYXA6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4pID0+IEdlbmVyYXRpb25SZXN1bHRcbiAgKSB7fVxuICBnZW5lcmF0ZU1vZGVscyA9IGFzeW5jICh7XG4gICAgdGFyZ2V0Rm9ybWF0LFxuICAgIG1heERlcHRoLFxuICAgIHR5cGVuYW1lSW50cm9zcGVjdGlvbixcbiAgICByZWxhdGl2ZVR5cGVzUGF0aCxcbiAgfTogRG9jdW1lbnRHZW5lcmF0aW9uUGFyYW1ldGVycykgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IGF3YWl0IHRoaXMuZmV0Y2hTY2hlbWEoKTtcblxuICAgIGlmICghc2NoZW1hKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2NoZW1hJyk7XG4gICAgfVxuXG4gICAgY29uc3QgZ2VuZXJhdGVkU3RhdGVtZW50cyA9IGdlbmVyYXRlU3RhdGVtZW50cyh7XG4gICAgICBzY2hlbWEsXG4gICAgICB0YXJnZXQ6IHRhcmdldEZvcm1hdCxcbiAgICAgIG1heERlcHRoLFxuICAgICAgdHlwZW5hbWVJbnRyb3NwZWN0aW9uLFxuICAgICAgcmVsYXRpdmVUeXBlc1BhdGgsXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5yZXN1bHRCdWlsZGVyKGdlbmVyYXRlZFN0YXRlbWVudHMpO1xuICB9O1xufVxuIl19