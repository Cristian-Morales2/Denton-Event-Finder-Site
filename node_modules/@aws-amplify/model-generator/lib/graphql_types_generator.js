import { generateStatements, generateTypes, } from '@aws-amplify/graphql-generator';
import { Source } from 'graphql';
/**
 * Generates GraphQL types for a given AppSync API
 */
export class AppSyncGraphqlTypesGenerator {
    fetchSchema;
    resultBuilder;
    /**
     * Configures the AppSyncGraphqlTypesGenerator
     */
    constructor(fetchSchema, resultBuilder) {
        this.fetchSchema = fetchSchema;
        this.resultBuilder = resultBuilder;
    }
    generateTypes = async ({ target, multipleSwiftFiles, maxDepth, typenameIntrospection, }) => {
        const schema = await this.fetchSchema();
        if (!schema) {
            throw new Error('Invalid schema');
        }
        const generatedStatements = generateStatements({
            schema,
            maxDepth,
            typenameIntrospection,
            target: 'graphql',
        });
        const queries = Object.entries(generatedStatements).map(([filename, contents]) => new Source(contents, filename));
        const generatedTypes = await generateTypes({
            schema,
            target,
            queries,
            multipleSwiftFiles,
        });
        return this.resultBuilder(generatedTypes);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhxbF90eXBlc19nZW5lcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ3JhcGhxbF90eXBlc19nZW5lcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGtCQUFrQixFQUNsQixhQUFhLEdBQ2QsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBT2pDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLDRCQUE0QjtJQUs3QjtJQUNBO0lBTFY7O09BRUc7SUFDSCxZQUNVLFdBQWtDLEVBQ2xDLGFBQW9FO1FBRHBFLGdCQUFXLEdBQVgsV0FBVyxDQUF1QjtRQUNsQyxrQkFBYSxHQUFiLGFBQWEsQ0FBdUQ7SUFDM0UsQ0FBQztJQUVKLGFBQWEsR0FBRyxLQUFLLEVBQUUsRUFDckIsTUFBTSxFQUNOLGtCQUFrQixFQUNsQixRQUFRLEVBQ1IscUJBQXFCLEdBQ0ssRUFBRSxFQUFFO1FBQzlCLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRXhDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDWCxNQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7U0FDbkM7UUFFRCxNQUFNLG1CQUFtQixHQUFHLGtCQUFrQixDQUFDO1lBQzdDLE1BQU07WUFDTixRQUFRO1lBQ1IscUJBQXFCO1lBQ3JCLE1BQU0sRUFBRSxTQUFTO1NBQ2xCLENBQUMsQ0FBQztRQUVILE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxHQUFHLENBQ3JELENBQUMsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FDekQsQ0FBQztRQUVGLE1BQU0sY0FBYyxHQUFHLE1BQU0sYUFBYSxDQUFDO1lBQ3pDLE1BQU07WUFDTixNQUFNO1lBQ04sT0FBTztZQUNQLGtCQUFrQjtTQUNuQixDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBnZW5lcmF0ZVN0YXRlbWVudHMsXG4gIGdlbmVyYXRlVHlwZXMsXG59IGZyb20gJ0Bhd3MtYW1wbGlmeS9ncmFwaHFsLWdlbmVyYXRvcic7XG5pbXBvcnQgeyBTb3VyY2UgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7XG4gIEdlbmVyYXRpb25SZXN1bHQsXG4gIEdyYXBocWxUeXBlc0dlbmVyYXRvcixcbiAgVHlwZXNHZW5lcmF0aW9uUGFyYW1ldGVycyxcbn0gZnJvbSAnLi9tb2RlbF9nZW5lcmF0b3IuanMnO1xuXG4vKipcbiAqIEdlbmVyYXRlcyBHcmFwaFFMIHR5cGVzIGZvciBhIGdpdmVuIEFwcFN5bmMgQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBBcHBTeW5jR3JhcGhxbFR5cGVzR2VuZXJhdG9yIGltcGxlbWVudHMgR3JhcGhxbFR5cGVzR2VuZXJhdG9yIHtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgdGhlIEFwcFN5bmNHcmFwaHFsVHlwZXNHZW5lcmF0b3JcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZmV0Y2hTY2hlbWE6ICgpID0+IFByb21pc2U8c3RyaW5nPixcbiAgICBwcml2YXRlIHJlc3VsdEJ1aWxkZXI6IChmaWxlTWFwOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+KSA9PiBHZW5lcmF0aW9uUmVzdWx0XG4gICkge31cblxuICBnZW5lcmF0ZVR5cGVzID0gYXN5bmMgKHtcbiAgICB0YXJnZXQsXG4gICAgbXVsdGlwbGVTd2lmdEZpbGVzLFxuICAgIG1heERlcHRoLFxuICAgIHR5cGVuYW1lSW50cm9zcGVjdGlvbixcbiAgfTogVHlwZXNHZW5lcmF0aW9uUGFyYW1ldGVycykgPT4ge1xuICAgIGNvbnN0IHNjaGVtYSA9IGF3YWl0IHRoaXMuZmV0Y2hTY2hlbWEoKTtcblxuICAgIGlmICghc2NoZW1hKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc2NoZW1hJyk7XG4gICAgfVxuXG4gICAgY29uc3QgZ2VuZXJhdGVkU3RhdGVtZW50cyA9IGdlbmVyYXRlU3RhdGVtZW50cyh7XG4gICAgICBzY2hlbWEsXG4gICAgICBtYXhEZXB0aCxcbiAgICAgIHR5cGVuYW1lSW50cm9zcGVjdGlvbixcbiAgICAgIHRhcmdldDogJ2dyYXBocWwnLFxuICAgIH0pO1xuXG4gICAgY29uc3QgcXVlcmllcyA9IE9iamVjdC5lbnRyaWVzKGdlbmVyYXRlZFN0YXRlbWVudHMpLm1hcChcbiAgICAgIChbZmlsZW5hbWUsIGNvbnRlbnRzXSkgPT4gbmV3IFNvdXJjZShjb250ZW50cywgZmlsZW5hbWUpXG4gICAgKTtcblxuICAgIGNvbnN0IGdlbmVyYXRlZFR5cGVzID0gYXdhaXQgZ2VuZXJhdGVUeXBlcyh7XG4gICAgICBzY2hlbWEsXG4gICAgICB0YXJnZXQsXG4gICAgICBxdWVyaWVzLFxuICAgICAgbXVsdGlwbGVTd2lmdEZpbGVzLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMucmVzdWx0QnVpbGRlcihnZW5lcmF0ZWRUeXBlcyk7XG4gIH07XG59XG4iXX0=