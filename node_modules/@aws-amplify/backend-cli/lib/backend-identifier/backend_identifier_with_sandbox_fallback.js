/**
 * Resolves the backend id when branch or stack is passed as an arg, otherwise returns a sandbox backend identifier
 */
export class BackendIdentifierResolverWithFallback {
    defaultResolver;
    fallbackResolver;
    /**
     * Accepts the sandbox id resolver as a parameter
     */
    constructor(defaultResolver, fallbackResolver) {
        this.defaultResolver = defaultResolver;
        this.fallbackResolver = fallbackResolver;
    }
    /**
     * resolves the backend id, falling back to the sandbox id if there is an error
     */
    resolve = async (args) => {
        return ((await this.defaultResolver.resolve(args)) ??
            (await this.fallbackResolver.resolve()));
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZF9pZGVudGlmaWVyX3dpdGhfc2FuZGJveF9mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9iYWNrZW5kLWlkZW50aWZpZXIvYmFja2VuZF9pZGVudGlmaWVyX3dpdGhfc2FuZGJveF9mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQTs7R0FFRztBQUNILE1BQU0sT0FBTyxxQ0FBcUM7SUFPdEM7SUFDQTtJQUxWOztPQUVHO0lBQ0gsWUFDVSxlQUEwQyxFQUMxQyxnQkFBMEM7UUFEMUMsb0JBQWUsR0FBZixlQUFlLENBQTJCO1FBQzFDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBMEI7SUFDakQsQ0FBQztJQUNKOztPQUVHO0lBQ0gsT0FBTyxHQUFHLEtBQUssRUFBRSxJQUFpQyxFQUFFLEVBQUU7UUFDcEQsT0FBTyxDQUNMLENBQUMsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQyxDQUFDLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxDQUFDLENBQ3hDLENBQUM7SUFDSixDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNhbmRib3hCYWNrZW5kSWRSZXNvbHZlciB9IGZyb20gJy4uL2NvbW1hbmRzL3NhbmRib3gvc2FuZGJveF9pZF9yZXNvbHZlci5qcyc7XG5pbXBvcnQge1xuICBCYWNrZW5kSWRlbnRpZmllclBhcmFtZXRlcnMsXG4gIEJhY2tlbmRJZGVudGlmaWVyUmVzb2x2ZXIsXG59IGZyb20gJy4vYmFja2VuZF9pZGVudGlmaWVyX3Jlc29sdmVyLmpzJztcblxuLyoqXG4gKiBSZXNvbHZlcyB0aGUgYmFja2VuZCBpZCB3aGVuIGJyYW5jaCBvciBzdGFjayBpcyBwYXNzZWQgYXMgYW4gYXJnLCBvdGhlcndpc2UgcmV0dXJucyBhIHNhbmRib3ggYmFja2VuZCBpZGVudGlmaWVyXG4gKi9cbmV4cG9ydCBjbGFzcyBCYWNrZW5kSWRlbnRpZmllclJlc29sdmVyV2l0aEZhbGxiYWNrXG4gIGltcGxlbWVudHMgQmFja2VuZElkZW50aWZpZXJSZXNvbHZlclxue1xuICAvKipcbiAgICogQWNjZXB0cyB0aGUgc2FuZGJveCBpZCByZXNvbHZlciBhcyBhIHBhcmFtZXRlclxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBkZWZhdWx0UmVzb2x2ZXI6IEJhY2tlbmRJZGVudGlmaWVyUmVzb2x2ZXIsXG4gICAgcHJpdmF0ZSBmYWxsYmFja1Jlc29sdmVyOiBTYW5kYm94QmFja2VuZElkUmVzb2x2ZXJcbiAgKSB7fVxuICAvKipcbiAgICogcmVzb2x2ZXMgdGhlIGJhY2tlbmQgaWQsIGZhbGxpbmcgYmFjayB0byB0aGUgc2FuZGJveCBpZCBpZiB0aGVyZSBpcyBhbiBlcnJvclxuICAgKi9cbiAgcmVzb2x2ZSA9IGFzeW5jIChhcmdzOiBCYWNrZW5kSWRlbnRpZmllclBhcmFtZXRlcnMpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgKGF3YWl0IHRoaXMuZGVmYXVsdFJlc29sdmVyLnJlc29sdmUoYXJncykpID8/XG4gICAgICAoYXdhaXQgdGhpcy5mYWxsYmFja1Jlc29sdmVyLnJlc29sdmUoKSlcbiAgICApO1xuICB9O1xufVxuIl19