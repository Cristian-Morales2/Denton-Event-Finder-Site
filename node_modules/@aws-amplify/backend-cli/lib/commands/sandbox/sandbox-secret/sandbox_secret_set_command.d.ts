import { ArgumentsCamelCase, Argv, CommandModule } from 'yargs';
import { SecretClient } from '@aws-amplify/backend-secret';
import { SandboxBackendIdResolver } from '../sandbox_id_resolver.js';
import { ArgumentsKebabCase } from '../../../kebab_case.js';
import { SandboxCommandGlobalOptions } from '../option_types.js';
/**
 * Command to set sandbox secret.
 */
export declare class SandboxSecretSetCommand implements CommandModule<object, SecretSetCommandOptionsKebabCase> {
    private readonly sandboxIdResolver;
    private readonly secretClient;
    /**
     * @inheritDoc
     */
    readonly command: string;
    /**
     * @inheritDoc
     */
    readonly describe: string;
    /**
     * Set sandbox secret command.
     */
    constructor(sandboxIdResolver: SandboxBackendIdResolver, secretClient: SecretClient);
    /**
     * @inheritDoc
     */
    handler: (args: ArgumentsCamelCase<SecretSetCommandOptionsKebabCase>) => Promise<void>;
    /**
     * @inheritDoc
     */
    builder: (yargs: Argv) => Argv<SecretSetCommandOptionsKebabCase>;
}
type SecretSetCommandOptionsKebabCase = ArgumentsKebabCase<{
    secretName: string;
} & SandboxCommandGlobalOptions>;
export {};
//# sourceMappingURL=sandbox_secret_set_command.d.ts.map