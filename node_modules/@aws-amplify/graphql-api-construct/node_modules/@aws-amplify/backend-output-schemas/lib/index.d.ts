import { z } from 'zod';
/**
 * The auth, graphql and storage exports here are duplicated from the submodule exports in the package.json file
 * This is because these types need to be consumed in CDK Constructs that may be JSII classes. JSII only supports
 * CommonJS modules which can't interpret submodule exports
 */
/**
 * ---------- Auth exports ----------
 */
export declare const platformOutputKey = "AWS::Amplify::Platform";
/**
 * re-export the auth output schema
 */
export * from './auth/index.js';
/**
 * Expected key that auth output is stored under
 */
export declare const authOutputKey = "AWS::Amplify::Auth";
/**
 * ---------- GraphQL exports ----------
 */
/**
 * re-export the graphql output schema
 */
export * from './graphql/index.js';
/**
 * Expected key that graphql output is stored under
 */
export declare const graphqlOutputKey = "AWS::Amplify::GraphQL";
/**
 * ---------- Storage exports ----------
 */
/**
 * re-export the storage output schema
 */
export * from './storage/index.js';
/**
 * Expected key that storage output is stored under
 */
export declare const storageOutputKey = "AWS::Amplify::Storage";
/**
 * ---------- Unified exports ----------
 */
/**
 * Defines the unified expected shape of Amplify backend output.
 * As new constructs are added that need to contribute backend output, entries should be added here so that client config generation is aware of these outputs
 */
export declare const unifiedBackendOutputSchema: z.ZodObject<{
    "AWS::Amplify::Platform": z.ZodOptional<z.ZodDiscriminatedUnion<"version", [z.ZodObject<{
        version: z.ZodLiteral<"1">;
        payload: z.ZodObject<{
            deploymentType: z.ZodString;
            region: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            deploymentType: string;
            region: string;
        }, {
            deploymentType: string;
            region: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        version: "1";
        payload: {
            deploymentType: string;
            region: string;
        };
    }, {
        version: "1";
        payload: {
            deploymentType: string;
            region: string;
        };
    }>]>>;
    "AWS::Amplify::Auth": z.ZodOptional<z.ZodDiscriminatedUnion<"version", [z.ZodObject<{
        version: z.ZodLiteral<"1">;
        payload: z.ZodObject<{
            authRegion: z.ZodString;
            userPoolId: z.ZodString;
            webClientId: z.ZodString;
            identityPoolId: z.ZodString;
            amazonClientId: z.ZodOptional<z.ZodString>;
            appleClientId: z.ZodOptional<z.ZodString>;
            facebookClientId: z.ZodOptional<z.ZodString>;
            googleClientId: z.ZodOptional<z.ZodString>;
            usernameAttributes: z.ZodOptional<z.ZodString>;
            signupAttributes: z.ZodOptional<z.ZodString>;
            passwordPolicyMinLength: z.ZodOptional<z.ZodString>;
            passwordPolicyRequirements: z.ZodOptional<z.ZodString>;
            mfaConfiguration: z.ZodOptional<z.ZodString>;
            mfaTypes: z.ZodOptional<z.ZodString>;
            verificationMechanisms: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            amazonClientId?: string | undefined;
            appleClientId?: string | undefined;
            facebookClientId?: string | undefined;
            googleClientId?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
        }, {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            amazonClientId?: string | undefined;
            appleClientId?: string | undefined;
            facebookClientId?: string | undefined;
            googleClientId?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        version: "1";
        payload: {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            amazonClientId?: string | undefined;
            appleClientId?: string | undefined;
            facebookClientId?: string | undefined;
            googleClientId?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
        };
    }, {
        version: "1";
        payload: {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            amazonClientId?: string | undefined;
            appleClientId?: string | undefined;
            facebookClientId?: string | undefined;
            googleClientId?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
        };
    }>]>>;
    "AWS::Amplify::GraphQL": z.ZodOptional<z.ZodDiscriminatedUnion<"version", [z.ZodObject<{
        version: z.ZodLiteral<"1">;
        payload: z.ZodObject<{
            awsAppsyncRegion: z.ZodString;
            awsAppsyncApiEndpoint: z.ZodString;
            awsAppsyncAuthenticationType: z.ZodEnum<["API_KEY", "AWS_LAMBDA", "AWS_IAM", "OPENID_CONNECT", "AMAZON_COGNITO_USER_POOLS"]>;
            awsAppsyncAdditionalAuthenticationTypes: z.ZodOptional<z.ZodString>;
            /**
             * ---------- Auth exports ----------
             */
            awsAppsyncConflictResolutionMode: z.ZodOptional<z.ZodString>;
            awsAppsyncApiKey: z.ZodOptional<z.ZodString>;
            awsAppsyncApiId: z.ZodString;
            amplifyApiModelSchemaS3Uri: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        }, {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        version: "1";
        payload: {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        };
    }, {
        version: "1";
        payload: {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        };
    }>]>>;
    "AWS::Amplify::Storage": z.ZodOptional<z.ZodDiscriminatedUnion<"version", [z.ZodObject<{
        version: z.ZodLiteral<"1">;
        payload: z.ZodObject<{
            bucketName: z.ZodString;
            storageRegion: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            bucketName: string;
            storageRegion: string;
        }, {
            bucketName: string;
            storageRegion: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        version: "1";
        payload: {
            bucketName: string;
            storageRegion: string;
        };
    }, {
        version: "1";
        payload: {
            bucketName: string;
            storageRegion: string;
        };
    }>]>>;
}, "strip", z.ZodTypeAny, {
    "AWS::Amplify::Platform"?: {
        version: "1";
        payload: {
            deploymentType: string;
            region: string;
        };
    } | undefined;
    "AWS::Amplify::Auth"?: {
        version: "1";
        payload: {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            amazonClientId?: string | undefined;
            appleClientId?: string | undefined;
            facebookClientId?: string | undefined;
            googleClientId?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::GraphQL"?: {
        version: "1";
        payload: {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::Storage"?: {
        version: "1";
        payload: {
            bucketName: string;
            storageRegion: string;
        };
    } | undefined;
}, {
    "AWS::Amplify::Platform"?: {
        version: "1";
        payload: {
            deploymentType: string;
            region: string;
        };
    } | undefined;
    "AWS::Amplify::Auth"?: {
        version: "1";
        payload: {
            authRegion: string;
            userPoolId: string;
            webClientId: string;
            identityPoolId: string;
            amazonClientId?: string | undefined;
            appleClientId?: string | undefined;
            facebookClientId?: string | undefined;
            googleClientId?: string | undefined;
            usernameAttributes?: string | undefined;
            signupAttributes?: string | undefined;
            passwordPolicyMinLength?: string | undefined;
            passwordPolicyRequirements?: string | undefined;
            mfaConfiguration?: string | undefined;
            mfaTypes?: string | undefined;
            verificationMechanisms?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::GraphQL"?: {
        version: "1";
        payload: {
            awsAppsyncRegion: string;
            awsAppsyncApiEndpoint: string;
            awsAppsyncAuthenticationType: "API_KEY" | "AWS_LAMBDA" | "AWS_IAM" | "OPENID_CONNECT" | "AMAZON_COGNITO_USER_POOLS";
            awsAppsyncApiId: string;
            amplifyApiModelSchemaS3Uri: string;
            awsAppsyncAdditionalAuthenticationTypes?: string | undefined;
            awsAppsyncConflictResolutionMode?: string | undefined;
            awsAppsyncApiKey?: string | undefined;
        };
    } | undefined;
    "AWS::Amplify::Storage"?: {
        version: "1";
        payload: {
            bucketName: string;
            storageRegion: string;
        };
    } | undefined;
}>;
/**
 * This type is a subset of the BackendOutput type that is exposed by the platform.
 * It represents BackendOutput that has been validated against the schema of known output values
 */
export type UnifiedBackendOutput = z.infer<typeof unifiedBackendOutputSchema>;
/**
 * ---------- Platform exports ----------
 */
export * from './platform/index.js';
//# sourceMappingURL=index.d.ts.map