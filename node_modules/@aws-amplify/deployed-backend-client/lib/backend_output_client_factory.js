import { DefaultBackendOutputClient } from './backend_output_client.js';
import { CloudFormationClient } from '@aws-sdk/client-cloudformation';
import { AmplifyClient } from '@aws-sdk/client-amplify';
export var BackendOutputClientErrorType;
(function (BackendOutputClientErrorType) {
    BackendOutputClientErrorType["METADATA_RETRIEVAL_ERROR"] = "MetadataRetrievalError";
})(BackendOutputClientErrorType || (BackendOutputClientErrorType = {}));
/**
 * Error type for BackendOutputClientError
 */
export class BackendOutputClientError extends Error {
    code;
    /**
     * Constructor for BackendOutputClientError
     */
    constructor(code, message, options) {
        super(message, options);
        this.code = code;
    }
}
/**
 * Factory to create a backend metadata reader
 */
export class BackendOutputClientFactory {
    /**
     * Returns a single instance of BackendOutputClient
     */
    static getInstance = (awsClientProvider) => {
        return new DefaultBackendOutputClient(awsClientProvider?.getCloudFormationClient() ??
            new CloudFormationClient(), awsClientProvider?.getAmplifyClient() ?? new AmplifyClient());
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZF9vdXRwdXRfY2xpZW50X2ZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvYmFja2VuZF9vdXRwdXRfY2xpZW50X2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFeEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBR3hELE1BQU0sQ0FBTixJQUFZLDRCQUVYO0FBRkQsV0FBWSw0QkFBNEI7SUFDdEMsbUZBQW1ELENBQUE7QUFDckQsQ0FBQyxFQUZXLDRCQUE0QixLQUE1Qiw0QkFBNEIsUUFFdkM7QUFDRDs7R0FFRztBQUNILE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxLQUFLO0lBQzFDLElBQUksQ0FBK0I7SUFFMUM7O09BRUc7SUFDSCxZQUNFLElBQWtDLEVBQ2xDLE9BQWUsRUFDZixPQUFzQjtRQUV0QixLQUFLLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQXVCRDs7R0FFRztBQUNILE1BQU0sT0FBTywwQkFBMEI7SUFDckM7O09BRUc7SUFDSCxNQUFNLENBQUMsV0FBVyxHQUFHLENBQ25CLGlCQUdFLEVBQ21CLEVBQUU7UUFDdkIsT0FBTyxJQUFJLDBCQUEwQixDQUNuQyxpQkFBaUIsRUFBRSx1QkFBdUIsRUFBRTtZQUMxQyxJQUFJLG9CQUFvQixFQUFFLEVBQzVCLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLElBQUksSUFBSSxhQUFhLEVBQUUsQ0FDN0QsQ0FBQztJQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF3c0NyZWRlbnRpYWxJZGVudGl0eVByb3ZpZGVyIH0gZnJvbSAnQGF3cy1zZGsvdHlwZXMnO1xuaW1wb3J0IHsgRGVwbG95ZWRCYWNrZW5kSWRlbnRpZmllciB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHsgRGVmYXVsdEJhY2tlbmRPdXRwdXRDbGllbnQgfSBmcm9tICcuL2JhY2tlbmRfb3V0cHV0X2NsaWVudC5qcyc7XG5pbXBvcnQgeyBVbmlmaWVkQmFja2VuZE91dHB1dCB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9iYWNrZW5kLW91dHB1dC1zY2hlbWFzJztcbmltcG9ydCB7IENsb3VkRm9ybWF0aW9uQ2xpZW50IH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LWNsb3VkZm9ybWF0aW9uJztcbmltcG9ydCB7IEFtcGxpZnlDbGllbnQgfSBmcm9tICdAYXdzLXNkay9jbGllbnQtYW1wbGlmeSc7XG5pbXBvcnQgeyBBV1NDbGllbnRQcm92aWRlciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9wbHVnaW4tdHlwZXMnO1xuXG5leHBvcnQgZW51bSBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JUeXBlIHtcbiAgTUVUQURBVEFfUkVUUklFVkFMX0VSUk9SID0gJ01ldGFkYXRhUmV0cmlldmFsRXJyb3InLFxufVxuLyoqXG4gKiBFcnJvciB0eXBlIGZvciBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JcbiAqL1xuZXhwb3J0IGNsYXNzIEJhY2tlbmRPdXRwdXRDbGllbnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgcHVibGljIGNvZGU6IEJhY2tlbmRPdXRwdXRDbGllbnRFcnJvclR5cGU7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIGZvciBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIGNvZGU6IEJhY2tlbmRPdXRwdXRDbGllbnRFcnJvclR5cGUsXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIG9wdGlvbnM/OiBFcnJvck9wdGlvbnNcbiAgKSB7XG4gICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgfVxufVxuXG4vKipcbiAqIERlZmluZXMgQmFja2VuZE91dHB1dENsaWVudFxuICovXG5leHBvcnQgdHlwZSBCYWNrZW5kT3V0cHV0Q2xpZW50ID0ge1xuICByZWFkb25seSBnZXRPdXRwdXQ6IChcbiAgICBiYWNrZW5kSWRlbnRpZmllcjogRGVwbG95ZWRCYWNrZW5kSWRlbnRpZmllclxuICApID0+IFByb21pc2U8VW5pZmllZEJhY2tlbmRPdXRwdXQ+O1xufTtcblxuZXhwb3J0IHR5cGUgQmFja2VuZE91dHB1dENsaWVudE9wdGlvbnMgPSB7XG4gIGNsb3VkRm9ybWF0aW9uQ2xpZW50OiBDbG91ZEZvcm1hdGlvbkNsaWVudDtcbiAgYW1wbGlmeUNsaWVudDogQW1wbGlmeUNsaWVudDtcbn07XG5cbmV4cG9ydCB0eXBlIEJhY2tlbmRPdXRwdXRDcmVkZW50aWFsc09wdGlvbnMgPSB7XG4gIGNyZWRlbnRpYWxzOiBBd3NDcmVkZW50aWFsSWRlbnRpdHlQcm92aWRlcjtcbn07XG5cbmV4cG9ydCB0eXBlIEJhY2tlbmRPdXRwdXRDbGllbnRGYWN0b3J5T3B0aW9ucyA9XG4gIHwgQmFja2VuZE91dHB1dENsaWVudE9wdGlvbnNcbiAgfCBCYWNrZW5kT3V0cHV0Q3JlZGVudGlhbHNPcHRpb25zO1xuLyoqXG4gKiBGYWN0b3J5IHRvIGNyZWF0ZSBhIGJhY2tlbmQgbWV0YWRhdGEgcmVhZGVyXG4gKi9cbmV4cG9ydCBjbGFzcyBCYWNrZW5kT3V0cHV0Q2xpZW50RmFjdG9yeSB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgc2luZ2xlIGluc3RhbmNlIG9mIEJhY2tlbmRPdXRwdXRDbGllbnRcbiAgICovXG4gIHN0YXRpYyBnZXRJbnN0YW5jZSA9IChcbiAgICBhd3NDbGllbnRQcm92aWRlcj86IEFXU0NsaWVudFByb3ZpZGVyPHtcbiAgICAgIGdldEFtcGxpZnlDbGllbnQ6IEFtcGxpZnlDbGllbnQ7XG4gICAgICBnZXRDbG91ZEZvcm1hdGlvbkNsaWVudDogQ2xvdWRGb3JtYXRpb25DbGllbnQ7XG4gICAgfT5cbiAgKTogQmFja2VuZE91dHB1dENsaWVudCA9PiB7XG4gICAgcmV0dXJuIG5ldyBEZWZhdWx0QmFja2VuZE91dHB1dENsaWVudChcbiAgICAgIGF3c0NsaWVudFByb3ZpZGVyPy5nZXRDbG91ZEZvcm1hdGlvbkNsaWVudCgpID8/XG4gICAgICAgIG5ldyBDbG91ZEZvcm1hdGlvbkNsaWVudCgpLFxuICAgICAgYXdzQ2xpZW50UHJvdmlkZXI/LmdldEFtcGxpZnlDbGllbnQoKSA/PyBuZXcgQW1wbGlmeUNsaWVudCgpXG4gICAgKTtcbiAgfTtcbn1cbiJdfQ==