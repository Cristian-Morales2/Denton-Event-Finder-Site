import { AmplifyUserError, FilePathExtractor, } from '@aws-amplify/platform-core';
import { dirname, join } from 'path';
/**
 * Resolve JS Resolver Handler or Sql Reference Handler entry path to absolute path
 * @param entry handler entry
 * @returns resolved absolute file path
 */
export const resolveEntryPath = (entry) => {
    const unresolvedImportLocationError = new AmplifyUserError('UnresolvedEntryPath', {
        message: 'Could not determine import path to construct absolute code path from relative path: ' +
            JSON.stringify(entry),
        resolution: 'Consider using an absolute path instead.',
    });
    if (typeof entry === 'string') {
        return entry;
    }
    const filePath = new FilePathExtractor(entry.importLine).extract();
    if (filePath) {
        return join(dirname(filePath), entry.relativePath);
    }
    throw unresolvedImportLocationError;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZV9lbnRyeV9wYXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Jlc29sdmVfZW50cnlfcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLGlCQUFpQixHQUNsQixNQUFNLDRCQUE0QixDQUFDO0FBQ3BDLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBSXJDOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLEtBQXNCLEVBQVUsRUFBRTtJQUNqRSxNQUFNLDZCQUE2QixHQUFHLElBQUksZ0JBQWdCLENBQ3hELHFCQUFxQixFQUNyQjtRQUNFLE9BQU8sRUFDTCxzRkFBc0Y7WUFDdEYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDdkIsVUFBVSxFQUFFLDBDQUEwQztLQUN2RCxDQUNGLENBQUM7SUFFRixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtRQUM3QixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxRQUFRLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbkUsSUFBSSxRQUFRLEVBQUU7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO0tBQ3BEO0lBRUQsTUFBTSw2QkFBNkIsQ0FBQztBQUN0QyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBbXBsaWZ5VXNlckVycm9yLFxuICBGaWxlUGF0aEV4dHJhY3Rvcixcbn0gZnJvbSAnQGF3cy1hbXBsaWZ5L3BsYXRmb3JtLWNvcmUnO1xuaW1wb3J0IHsgZGlybmFtZSwgam9pbiB9IGZyb20gJ3BhdGgnO1xuaW1wb3J0IHR5cGUgeyBKc1Jlc29sdmVyRW50cnkgfSBmcm9tICdAYXdzLWFtcGxpZnkvZGF0YS1zY2hlbWEtdHlwZXMnO1xuaW1wb3J0IHsgQW1wbGlmeURhdGFFcnJvciB9IGZyb20gJy4vdHlwZXMuanMnO1xuXG4vKipcbiAqIFJlc29sdmUgSlMgUmVzb2x2ZXIgSGFuZGxlciBvciBTcWwgUmVmZXJlbmNlIEhhbmRsZXIgZW50cnkgcGF0aCB0byBhYnNvbHV0ZSBwYXRoXG4gKiBAcGFyYW0gZW50cnkgaGFuZGxlciBlbnRyeVxuICogQHJldHVybnMgcmVzb2x2ZWQgYWJzb2x1dGUgZmlsZSBwYXRoXG4gKi9cbmV4cG9ydCBjb25zdCByZXNvbHZlRW50cnlQYXRoID0gKGVudHJ5OiBKc1Jlc29sdmVyRW50cnkpOiBzdHJpbmcgPT4ge1xuICBjb25zdCB1bnJlc29sdmVkSW1wb3J0TG9jYXRpb25FcnJvciA9IG5ldyBBbXBsaWZ5VXNlckVycm9yPEFtcGxpZnlEYXRhRXJyb3I+KFxuICAgICdVbnJlc29sdmVkRW50cnlQYXRoJyxcbiAgICB7XG4gICAgICBtZXNzYWdlOlxuICAgICAgICAnQ291bGQgbm90IGRldGVybWluZSBpbXBvcnQgcGF0aCB0byBjb25zdHJ1Y3QgYWJzb2x1dGUgY29kZSBwYXRoIGZyb20gcmVsYXRpdmUgcGF0aDogJyArXG4gICAgICAgIEpTT04uc3RyaW5naWZ5KGVudHJ5KSxcbiAgICAgIHJlc29sdXRpb246ICdDb25zaWRlciB1c2luZyBhbiBhYnNvbHV0ZSBwYXRoIGluc3RlYWQuJyxcbiAgICB9XG4gICk7XG5cbiAgaWYgKHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZW50cnk7XG4gIH1cblxuICBjb25zdCBmaWxlUGF0aCA9IG5ldyBGaWxlUGF0aEV4dHJhY3RvcihlbnRyeS5pbXBvcnRMaW5lKS5leHRyYWN0KCk7XG4gIGlmIChmaWxlUGF0aCkge1xuICAgIHJldHVybiBqb2luKGRpcm5hbWUoZmlsZVBhdGgpLCBlbnRyeS5yZWxhdGl2ZVBhdGgpO1xuICB9XG5cbiAgdGhyb3cgdW5yZXNvbHZlZEltcG9ydExvY2F0aW9uRXJyb3I7XG59O1xuIl19