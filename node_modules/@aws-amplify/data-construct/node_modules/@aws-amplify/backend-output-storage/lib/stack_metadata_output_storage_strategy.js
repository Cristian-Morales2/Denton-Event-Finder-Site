"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StackMetadataBackendOutputStorageStrategy = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
/**
 * Implementation of BackendOutputStorageStrategy that stores config data in stack metadata and outputs
 */
class StackMetadataBackendOutputStorageStrategy {
    stack;
    /**
     * Initialize the instance with a stack.
     *
     * If the stack is an AmplifyStack, set a parameter in SSM so the stack can be identified later by the project environment
     */
    constructor(stack) {
        this.stack = stack;
    }
    /**
     * Store construct output as stack output and add pending metadata to the metadata object.
     *
     * Metadata is not written to the stack until flush() is called
     */
    addBackendOutputEntry = (keyName, backendOutputEntry) => {
        // add all the data values as stack outputs
        Object.entries(backendOutputEntry.payload).forEach(([key, value]) => {
            new aws_cdk_lib_1.CfnOutput(this.stack, key, { value });
        });
        this.stack.addMetadata(keyName, {
            version: backendOutputEntry.version,
            stackOutputs: Object.keys(backendOutputEntry.payload),
        });
    };
}
exports.StackMetadataBackendOutputStorageStrategy = StackMetadataBackendOutputStorageStrategy;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2tfbWV0YWRhdGFfb3V0cHV0X3N0b3JhZ2Vfc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3RhY2tfbWV0YWRhdGFfb3V0cHV0X3N0b3JhZ2Vfc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBSUEsNkNBQStDO0FBRS9DOztHQUVHO0FBQ0gsTUFBYSx5Q0FBeUM7SUFRdkI7SUFMN0I7Ozs7T0FJRztJQUNILFlBQTZCLEtBQVk7UUFBWixVQUFLLEdBQUwsS0FBSyxDQUFPO0lBQUcsQ0FBQztJQUU3Qzs7OztPQUlHO0lBQ0gscUJBQXFCLEdBQUcsQ0FDdEIsT0FBZSxFQUNmLGtCQUFzQyxFQUNoQyxFQUFFO1FBQ1IsMkNBQTJDO1FBQzNDLE1BQU0sQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRTtZQUNsRSxJQUFJLHVCQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFO1lBQzlCLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxPQUFPO1lBQ25DLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQztTQUN0RCxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7Q0FDSDtBQTdCRCw4RkE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBCYWNrZW5kT3V0cHV0RW50cnksXG4gIEJhY2tlbmRPdXRwdXRTdG9yYWdlU3RyYXRlZ3ksXG59IGZyb20gJ0Bhd3MtYW1wbGlmeS9wbHVnaW4tdHlwZXMnO1xuaW1wb3J0IHsgQ2ZuT3V0cHV0LCBTdGFjayB9IGZyb20gJ2F3cy1jZGstbGliJztcblxuLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiBCYWNrZW5kT3V0cHV0U3RvcmFnZVN0cmF0ZWd5IHRoYXQgc3RvcmVzIGNvbmZpZyBkYXRhIGluIHN0YWNrIG1ldGFkYXRhIGFuZCBvdXRwdXRzXG4gKi9cbmV4cG9ydCBjbGFzcyBTdGFja01ldGFkYXRhQmFja2VuZE91dHB1dFN0b3JhZ2VTdHJhdGVneVxuICBpbXBsZW1lbnRzIEJhY2tlbmRPdXRwdXRTdG9yYWdlU3RyYXRlZ3k8QmFja2VuZE91dHB1dEVudHJ5Plxue1xuICAvKipcbiAgICogSW5pdGlhbGl6ZSB0aGUgaW5zdGFuY2Ugd2l0aCBhIHN0YWNrLlxuICAgKlxuICAgKiBJZiB0aGUgc3RhY2sgaXMgYW4gQW1wbGlmeVN0YWNrLCBzZXQgYSBwYXJhbWV0ZXIgaW4gU1NNIHNvIHRoZSBzdGFjayBjYW4gYmUgaWRlbnRpZmllZCBsYXRlciBieSB0aGUgcHJvamVjdCBlbnZpcm9ubWVudFxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBzdGFjazogU3RhY2spIHt9XG5cbiAgLyoqXG4gICAqIFN0b3JlIGNvbnN0cnVjdCBvdXRwdXQgYXMgc3RhY2sgb3V0cHV0IGFuZCBhZGQgcGVuZGluZyBtZXRhZGF0YSB0byB0aGUgbWV0YWRhdGEgb2JqZWN0LlxuICAgKlxuICAgKiBNZXRhZGF0YSBpcyBub3Qgd3JpdHRlbiB0byB0aGUgc3RhY2sgdW50aWwgZmx1c2goKSBpcyBjYWxsZWRcbiAgICovXG4gIGFkZEJhY2tlbmRPdXRwdXRFbnRyeSA9IChcbiAgICBrZXlOYW1lOiBzdHJpbmcsXG4gICAgYmFja2VuZE91dHB1dEVudHJ5OiBCYWNrZW5kT3V0cHV0RW50cnlcbiAgKTogdm9pZCA9PiB7XG4gICAgLy8gYWRkIGFsbCB0aGUgZGF0YSB2YWx1ZXMgYXMgc3RhY2sgb3V0cHV0c1xuICAgIE9iamVjdC5lbnRyaWVzKGJhY2tlbmRPdXRwdXRFbnRyeS5wYXlsb2FkKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgIG5ldyBDZm5PdXRwdXQodGhpcy5zdGFjaywga2V5LCB7IHZhbHVlIH0pO1xuICAgIH0pO1xuXG4gICAgdGhpcy5zdGFjay5hZGRNZXRhZGF0YShrZXlOYW1lLCB7XG4gICAgICB2ZXJzaW9uOiBiYWNrZW5kT3V0cHV0RW50cnkudmVyc2lvbixcbiAgICAgIHN0YWNrT3V0cHV0czogT2JqZWN0LmtleXMoYmFja2VuZE91dHB1dEVudHJ5LnBheWxvYWQpLFxuICAgIH0pO1xuICB9O1xufVxuIl19