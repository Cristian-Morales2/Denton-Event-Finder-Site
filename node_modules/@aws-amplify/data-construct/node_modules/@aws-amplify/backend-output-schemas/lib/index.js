"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.unifiedBackendOutputSchema = exports.storageOutputKey = exports.graphqlOutputKey = exports.authOutputKey = exports.platformOutputKey = void 0;
const zod_1 = require("zod");
const index_js_1 = require("./auth/index.js");
const index_js_2 = require("./graphql/index.js");
const index_js_3 = require("./storage/index.js");
const index_js_4 = require("./stack/index.js");
/**
 * The auth, graphql and storage exports here are duplicated from the submodule exports in the package.json file
 * This is because these types need to be consumed in CDK Constructs that may be JSII classes. JSII only supports
 * CommonJS modules which can't interpret submodule exports
 */
/**
 * ---------- Auth exports ----------
 */
exports.platformOutputKey = 'AWS::Amplify::Platform';
/**
 * re-export the auth output schema
 */
__exportStar(require("./auth/index.js"), exports);
/**
 * Expected key that auth output is stored under
 */
exports.authOutputKey = 'AWS::Amplify::Auth';
/**
 * ---------- GraphQL exports ----------
 */
/**
 * re-export the graphql output schema
 */
__exportStar(require("./graphql/index.js"), exports);
/**
 * Expected key that graphql output is stored under
 */
exports.graphqlOutputKey = 'AWS::Amplify::GraphQL';
/**
 * ---------- Storage exports ----------
 */
/**
 * re-export the storage output schema
 */
__exportStar(require("./storage/index.js"), exports);
/**
 * Expected key that storage output is stored under
 */
exports.storageOutputKey = 'AWS::Amplify::Storage';
/**
 * ---------- Unified exports ----------
 */
/**
 * Defines the unified expected shape of Amplify backend output.
 * As new constructs are added that need to contribute backend output, entries should be added here so that client config generation is aware of these outputs
 */
exports.unifiedBackendOutputSchema = zod_1.z.object({
    [exports.platformOutputKey]: index_js_4.versionedStackOutputSchema.optional(),
    [exports.authOutputKey]: index_js_1.versionedAuthOutputSchema.optional(),
    [exports.graphqlOutputKey]: index_js_2.versionedGraphqlOutputSchema.optional(),
    [exports.storageOutputKey]: index_js_3.versionedStorageOutputSchema.optional(),
});
/**
 * ---------- Platform exports ----------
 */
__exportStar(require("./platform/index.js"), exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2QkFBd0I7QUFDeEIsOENBQTREO0FBQzVELGlEQUFrRTtBQUNsRSxpREFBa0U7QUFDbEUsK0NBQThEO0FBRTlEOzs7O0dBSUc7QUFFSDs7R0FFRztBQUVVLFFBQUEsaUJBQWlCLEdBQUcsd0JBQXdCLENBQUM7QUFFMUQ7O0dBRUc7QUFDSCxrREFBZ0M7QUFFaEM7O0dBRUc7QUFDVSxRQUFBLGFBQWEsR0FBRyxvQkFBb0IsQ0FBQztBQUVsRDs7R0FFRztBQUVIOztHQUVHO0FBQ0gscURBQW1DO0FBRW5DOztHQUVHO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBRyx1QkFBdUIsQ0FBQztBQUV4RDs7R0FFRztBQUVIOztHQUVHO0FBQ0gscURBQW1DO0FBRW5DOztHQUVHO0FBQ1UsUUFBQSxnQkFBZ0IsR0FBRyx1QkFBdUIsQ0FBQztBQUV4RDs7R0FFRztBQUVIOzs7R0FHRztBQUNVLFFBQUEsMEJBQTBCLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNqRCxDQUFDLHlCQUFpQixDQUFDLEVBQUUscUNBQTBCLENBQUMsUUFBUSxFQUFFO0lBQzFELENBQUMscUJBQWEsQ0FBQyxFQUFFLG9DQUF5QixDQUFDLFFBQVEsRUFBRTtJQUNyRCxDQUFDLHdCQUFnQixDQUFDLEVBQUUsdUNBQTRCLENBQUMsUUFBUSxFQUFFO0lBQzNELENBQUMsd0JBQWdCLENBQUMsRUFBRSx1Q0FBNEIsQ0FBQyxRQUFRLEVBQUU7Q0FDNUQsQ0FBQyxDQUFDO0FBT0g7O0dBRUc7QUFFSCxzREFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcbmltcG9ydCB7IHZlcnNpb25lZEF1dGhPdXRwdXRTY2hlbWEgfSBmcm9tICcuL2F1dGgvaW5kZXguanMnO1xuaW1wb3J0IHsgdmVyc2lvbmVkR3JhcGhxbE91dHB1dFNjaGVtYSB9IGZyb20gJy4vZ3JhcGhxbC9pbmRleC5qcyc7XG5pbXBvcnQgeyB2ZXJzaW9uZWRTdG9yYWdlT3V0cHV0U2NoZW1hIH0gZnJvbSAnLi9zdG9yYWdlL2luZGV4LmpzJztcbmltcG9ydCB7IHZlcnNpb25lZFN0YWNrT3V0cHV0U2NoZW1hIH0gZnJvbSAnLi9zdGFjay9pbmRleC5qcyc7XG5cbi8qKlxuICogVGhlIGF1dGgsIGdyYXBocWwgYW5kIHN0b3JhZ2UgZXhwb3J0cyBoZXJlIGFyZSBkdXBsaWNhdGVkIGZyb20gdGhlIHN1Ym1vZHVsZSBleHBvcnRzIGluIHRoZSBwYWNrYWdlLmpzb24gZmlsZVxuICogVGhpcyBpcyBiZWNhdXNlIHRoZXNlIHR5cGVzIG5lZWQgdG8gYmUgY29uc3VtZWQgaW4gQ0RLIENvbnN0cnVjdHMgdGhhdCBtYXkgYmUgSlNJSSBjbGFzc2VzLiBKU0lJIG9ubHkgc3VwcG9ydHNcbiAqIENvbW1vbkpTIG1vZHVsZXMgd2hpY2ggY2FuJ3QgaW50ZXJwcmV0IHN1Ym1vZHVsZSBleHBvcnRzXG4gKi9cblxuLyoqXG4gKiAtLS0tLS0tLS0tIEF1dGggZXhwb3J0cyAtLS0tLS0tLS0tXG4gKi9cblxuZXhwb3J0IGNvbnN0IHBsYXRmb3JtT3V0cHV0S2V5ID0gJ0FXUzo6QW1wbGlmeTo6UGxhdGZvcm0nO1xuXG4vKipcbiAqIHJlLWV4cG9ydCB0aGUgYXV0aCBvdXRwdXQgc2NoZW1hXG4gKi9cbmV4cG9ydCAqIGZyb20gJy4vYXV0aC9pbmRleC5qcyc7XG5cbi8qKlxuICogRXhwZWN0ZWQga2V5IHRoYXQgYXV0aCBvdXRwdXQgaXMgc3RvcmVkIHVuZGVyXG4gKi9cbmV4cG9ydCBjb25zdCBhdXRoT3V0cHV0S2V5ID0gJ0FXUzo6QW1wbGlmeTo6QXV0aCc7XG5cbi8qKlxuICogLS0tLS0tLS0tLSBHcmFwaFFMIGV4cG9ydHMgLS0tLS0tLS0tLVxuICovXG5cbi8qKlxuICogcmUtZXhwb3J0IHRoZSBncmFwaHFsIG91dHB1dCBzY2hlbWFcbiAqL1xuZXhwb3J0ICogZnJvbSAnLi9ncmFwaHFsL2luZGV4LmpzJztcblxuLyoqXG4gKiBFeHBlY3RlZCBrZXkgdGhhdCBncmFwaHFsIG91dHB1dCBpcyBzdG9yZWQgdW5kZXJcbiAqL1xuZXhwb3J0IGNvbnN0IGdyYXBocWxPdXRwdXRLZXkgPSAnQVdTOjpBbXBsaWZ5OjpHcmFwaFFMJztcblxuLyoqXG4gKiAtLS0tLS0tLS0tIFN0b3JhZ2UgZXhwb3J0cyAtLS0tLS0tLS0tXG4gKi9cblxuLyoqXG4gKiByZS1leHBvcnQgdGhlIHN0b3JhZ2Ugb3V0cHV0IHNjaGVtYVxuICovXG5leHBvcnQgKiBmcm9tICcuL3N0b3JhZ2UvaW5kZXguanMnO1xuXG4vKipcbiAqIEV4cGVjdGVkIGtleSB0aGF0IHN0b3JhZ2Ugb3V0cHV0IGlzIHN0b3JlZCB1bmRlclxuICovXG5leHBvcnQgY29uc3Qgc3RvcmFnZU91dHB1dEtleSA9ICdBV1M6OkFtcGxpZnk6OlN0b3JhZ2UnO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0gVW5pZmllZCBleHBvcnRzIC0tLS0tLS0tLS1cbiAqL1xuXG4vKipcbiAqIERlZmluZXMgdGhlIHVuaWZpZWQgZXhwZWN0ZWQgc2hhcGUgb2YgQW1wbGlmeSBiYWNrZW5kIG91dHB1dC5cbiAqIEFzIG5ldyBjb25zdHJ1Y3RzIGFyZSBhZGRlZCB0aGF0IG5lZWQgdG8gY29udHJpYnV0ZSBiYWNrZW5kIG91dHB1dCwgZW50cmllcyBzaG91bGQgYmUgYWRkZWQgaGVyZSBzbyB0aGF0IGNsaWVudCBjb25maWcgZ2VuZXJhdGlvbiBpcyBhd2FyZSBvZiB0aGVzZSBvdXRwdXRzXG4gKi9cbmV4cG9ydCBjb25zdCB1bmlmaWVkQmFja2VuZE91dHB1dFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgW3BsYXRmb3JtT3V0cHV0S2V5XTogdmVyc2lvbmVkU3RhY2tPdXRwdXRTY2hlbWEub3B0aW9uYWwoKSxcbiAgW2F1dGhPdXRwdXRLZXldOiB2ZXJzaW9uZWRBdXRoT3V0cHV0U2NoZW1hLm9wdGlvbmFsKCksXG4gIFtncmFwaHFsT3V0cHV0S2V5XTogdmVyc2lvbmVkR3JhcGhxbE91dHB1dFNjaGVtYS5vcHRpb25hbCgpLFxuICBbc3RvcmFnZU91dHB1dEtleV06IHZlcnNpb25lZFN0b3JhZ2VPdXRwdXRTY2hlbWEub3B0aW9uYWwoKSxcbn0pO1xuLyoqXG4gKiBUaGlzIHR5cGUgaXMgYSBzdWJzZXQgb2YgdGhlIEJhY2tlbmRPdXRwdXQgdHlwZSB0aGF0IGlzIGV4cG9zZWQgYnkgdGhlIHBsYXRmb3JtLlxuICogSXQgcmVwcmVzZW50cyBCYWNrZW5kT3V0cHV0IHRoYXQgaGFzIGJlZW4gdmFsaWRhdGVkIGFnYWluc3QgdGhlIHNjaGVtYSBvZiBrbm93biBvdXRwdXQgdmFsdWVzXG4gKi9cbmV4cG9ydCB0eXBlIFVuaWZpZWRCYWNrZW5kT3V0cHV0ID0gei5pbmZlcjx0eXBlb2YgdW5pZmllZEJhY2tlbmRPdXRwdXRTY2hlbWE+O1xuXG4vKipcbiAqIC0tLS0tLS0tLS0gUGxhdGZvcm0gZXhwb3J0cyAtLS0tLS0tLS0tXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wbGF0Zm9ybS9pbmRleC5qcyc7XG4iXX0=